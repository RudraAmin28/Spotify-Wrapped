// Generated by view binder compiler. Do not edit!
package com.example.spotifywrapped.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.spotifywrapped.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView DeleteAccountText;

  @NonNull
  public final TextView SignOutText;

  @NonNull
  public final RelativeLayout entryDeleteAccount;

  @NonNull
  public final RelativeLayout entrySignOut;

  @NonNull
  public final RelativeLayout entryUpdateLogin;

  @NonNull
  public final TextView updateLoginText;

  private FragmentSettingsBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView DeleteAccountText, @NonNull TextView SignOutText,
      @NonNull RelativeLayout entryDeleteAccount, @NonNull RelativeLayout entrySignOut,
      @NonNull RelativeLayout entryUpdateLogin, @NonNull TextView updateLoginText) {
    this.rootView = rootView;
    this.DeleteAccountText = DeleteAccountText;
    this.SignOutText = SignOutText;
    this.entryDeleteAccount = entryDeleteAccount;
    this.entrySignOut = entrySignOut;
    this.entryUpdateLogin = entryUpdateLogin;
    this.updateLoginText = updateLoginText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DeleteAccountText;
      TextView DeleteAccountText = ViewBindings.findChildViewById(rootView, id);
      if (DeleteAccountText == null) {
        break missingId;
      }

      id = R.id.SignOutText;
      TextView SignOutText = ViewBindings.findChildViewById(rootView, id);
      if (SignOutText == null) {
        break missingId;
      }

      id = R.id.entryDeleteAccount;
      RelativeLayout entryDeleteAccount = ViewBindings.findChildViewById(rootView, id);
      if (entryDeleteAccount == null) {
        break missingId;
      }

      id = R.id.entrySignOut;
      RelativeLayout entrySignOut = ViewBindings.findChildViewById(rootView, id);
      if (entrySignOut == null) {
        break missingId;
      }

      id = R.id.entryUpdateLogin;
      RelativeLayout entryUpdateLogin = ViewBindings.findChildViewById(rootView, id);
      if (entryUpdateLogin == null) {
        break missingId;
      }

      id = R.id.updateLoginText;
      TextView updateLoginText = ViewBindings.findChildViewById(rootView, id);
      if (updateLoginText == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((RelativeLayout) rootView, DeleteAccountText, SignOutText,
          entryDeleteAccount, entrySignOut, entryUpdateLogin, updateLoginText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
